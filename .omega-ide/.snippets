>:>:>fori
for(int i = 0; i < ; i++){
	
}
<:<:<28,1
>:>:>psvm
public static void main(String[] args){
	
}
<:<:<41,1
>:>:>forj
for(int j = 0; j < ; j++){
	
}
<:<:<19,0
>:>:>fork
for(int k = 0; k < ; k++){
	
}
<:<:<19,0
>:>:>meth
public void (){
	
}
<:<:<12,0
>:>:>staticmeth
public static void (){
	
}
<:<:<19,0
>:>:>cons
public (){
	
}
<:<:<7,0
>:>:>while
while(){
	
}
<:<:<6,0
>:>:>switch
switch(){
	case :
	break;

	default:
}
<:<:<7,0
>:>:>sop
System.out.print();
<:<:<17,0
>:>:>sopln
System.out.println();
<:<:<19,0
>:>:>sep
System.err.print();
<:<:<17,0
>:>:>sepln
System.err.println();
<:<:<19,0
>:>:>se
System.exit();
<:<:<12,0
>:>:>trycatch
try{
	
}
catch(Exception e){
	e.printStackTrace();
}

<:<:<6,1
>:>:>geng2d
Graphics2D g = (Graphics2D)graphics;
g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
g.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);

<:<:<223,3
>:>:>tsleep
try{Thread.sleep();}catch(Exception e){}
<:<:<17,0
>:>:>ideplug
@Override
public void init(){
    
}

@Override
public void enable(){
    
}

@Override
public void disable(){
    
}

@Override
public BufferedImage getImage(){
	return null;
}

@Override
public LinkedList<BufferedImage> getImages(){
	return null;
}

@Override
public String getName(){
     return "";
}

@Override
public String getAuthor(){
	return "";
}

@Override
public String getVersion(){
	return "";
}

@Override
public String getDescription(){
     return "";
}

@Override
public String getCopyright(){
	return "";
}
<:<:<118,14
>:>:>setgtkui
javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.gtk.GTKLookAndFeel");
<:<:<0,0
>:>:>geng2dpaint
@Override
public void paint(Graphics graphics){
	Graphics2D g = (Graphics2D)graphics;
	g.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
	g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
	g.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
	
}
<:<:<363,6
>:>:>psf
private static final 
<:<:<21,0
>:>:>supermeth
@Override
public void (){
	
}
<:<:<22,1
>:>:>supercons
@Override
public (){
	
}
<:<:<17,1
>:>:>genlinklist
LinkedList<> items = new LinkedList<>();
<:<:<11,0
>:>:>staticons
public static (){
	
}
<:<:<14,0
>:>:>ovis
@Override
public void setVisible(boolean value){
	if(value){
          
	}
     super.setVisible(value);
}
<:<:<71,3
>:>:>imgtk
import gi
gi.require_version("Gtk", "3.0")
from gi.repository import Gtk


<:<:<74,4
>:>:>imui
import static omega.utils.UIManager.*;
import static omega.comp.Animations.*;

<:<:<38,0
>:>:>osize
@Override
public void setSize(int width, int height){
	super.setSize(width, height);
	
}

<:<:<86,3
>:>:>oshape
@Override
public void setSize(int width, int height){
	super.setSize(width, height);
	setShape(new RoundRectangle2D.Double(0, 0, width, height, 20, 20));
}

<:<:<156,5
>:>:>kmeth
fun (){
	
}
<:<:<4,0
>:>:>rshape
setShape(new RoundRectangle2D.Double(0, 0, getWidth(), getHeight(), 20, 20));

<:<:<78,1
>:>:>superlayout
@Override
public void layout(){
	
	super.layout();
}

<:<:<33,2
>:>:>locatestring
g.drawString(, getWidth()/2 - g.getFontMetrics().stringWidth()/2, getHeight()/2 - g.getFontMetrics().getHeight()/2 + g.getFontMetrics().getAscent() - g.getFontMetrics().getDescent() + 1);

<:<:<13,0
>:>:>syncmeth
public synchronized void (){
	
}

<:<:<25,0
>:>:>consyncmeth
public synchronized (){
	
}

<:<:<20,0
>:>:>syncstatic
public synchronized static void (){
	
}

<:<:<32,0
